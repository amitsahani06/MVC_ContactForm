@model ContactForm.Models.ContactUsViewModel


@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @id = "contactUsFormId", role = "form" }))
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6 form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 form-group">
                    @Html.LabelFor(m => m.PhoneNo, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control", @placeholder = "Phone No" })
                    @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 form-group">
                    @Html.LabelFor(m => m.ContactPurpose, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.ContactPurpose, new List<SelectListItem>
                       { new SelectListItem{Text="Job App", Value="1"},
                     new SelectListItem{Text="Enquiry", Value="2"}}, "Please select", new { @class = "form-control" })
                    @Html.HiddenFor(m => m.ContactPurposeText, new { @id = "ContactPurposeText" })

                </div>

            </div>

            <div class="form-group">


            </div>

        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12 form-group">
                    @Html.LabelFor(m => m.Message, new { @class = "control-label" })
                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control", @placeholder = "Hi there, I would like to...", @rows = 10 })
                </div>
                <div class="col-md-12 form-group">
                    <button class="pull-right btn btn-success" type="submit">Submit form</button>
                </div>

            </div>
        </div>
    </div>
    if ((Boolean)TempData["Success"])
    {
        <div class="alert alert-success alert-dismissible">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>Success!</strong> Thank you for contacting us.
        </div>
    }

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/form-validator")
}


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    $(function () {

        $("#ContactPurpose").change(function () {
            var ddtext = $("#ContactPurpose option:selected").text();
            console.log('on change', ddtext);
            $("#ContactPurposeText").val(ddtext);
        });


    });
</script>
